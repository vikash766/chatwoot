version: '3'

services:
  base: &base
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      # args:
        # BUNDLE_WITHOUT: 'development:test'
        # EXECJS_RUNTIME: Disabled
        # RAILS_ENV: 'production'
        # RAILS_SERVE_STATIC_FILES: 'true'
    image: chatwoot:3.16.0
    env_file: .env ## Change this file for customized env variables
    volumes:
      - /home/techiterian/Documents/applications/chatwoot:/app/storage
    networks:
      - cbnet  

  rails:
    <<: *base
    # depends_on:
    #   - postgreCont
    #   - redisCont
    ports:
      - '127.0.0.1:9086:3000'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    networks:
      - cbnet

  sidekiq:
    <<: *base
    # ports:
    #   - "9084:3000"
    # depends_on:
    #   - postgreCont
    #   - redisCont
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
    networks:
      - cbnet
      
networks:
  cbnet:
    external: true
  # postgres:
  #   image: postgres:12
  #   restart: always
  #   ports:
  #     - '127.0.0.1:5432:5432'
  #   volumes:
  #     - /data/postgres:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_DB=chatwoot
  #     - POSTGRES_USER=postgres
  #     # Please provide your own password.
  #     - POSTGRES_PASSWORD=

  # redis:
  #   image: redis:alpine
  #   restart: always
  #   command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
  #   env_file: .env
  #   volumes:
  #     - /data/redis:/data
  #   ports:
  #     - '127.0.0.1:6379:6379'
